"use client"

import { useEffect, useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { CodeEditor } from "@/components/code-editor"
import { ComponentPreview } from "@/components/component-preview"
import { CopyIcon, CheckIcon, CalendarIcon, TagIcon } from "lucide-react"

interface SavedComponent {
  id: string
  name: string
  description: string
  code: string
  category: string
  tags: string[]
  createdAt: string
  framework: string
  styling: string
}

export default function SharedComponentPage({ params }: { params: { id: string } }) {
  const [component, setComponent] = useState<SavedComponent | null>(null)
  const [copied, setCopied] = useState(false)
  const [error, setError] = useState("")

  useEffect(() => {
    try {
      const decodedData = atob(params.id)
      const componentData = JSON.parse(decodedData)
      setComponent(componentData)
    } catch (err) {
      setError("Invalid or corrupted share link")
    }
  }, [params.id])

  const handleCopyCode = async () => {
    if (component) {
      await navigator.clipboard.writeText(component.code)
      setCopied(true)
      setTimeout(() => setCopied(false), 2000)
    }
  }

  if (error) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center p-4">
        <Card className="max-w-md">
          <CardContent className="p-6 text-center">
            <h1 className="text-xl font-semibold mb-2">Invalid Share Link</h1>
            <p className="text-muted-foreground">{error}</p>
          </CardContent>
        </Card>
      </div>
    )
  }

  if (!component) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-background">
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-6xl mx-auto">
          <Card className="mb-6">
            <CardHeader>
              <div className="flex items-start justify-between">
                <div>
                  <CardTitle className="text-2xl mb-2">{component.name}</CardTitle>
                  <p className="text-muted-foreground mb-4">{component.description}</p>

                  <div className="flex items-center gap-4 text-sm text-muted-foreground mb-4">
                    <div className="flex items-center gap-1">
                      <CalendarIcon className="w-4 h-4" />
                      {new Date(component.createdAt).toLocaleDateString()}
                    </div>
                    <Badge variant="secondary">{component.category}</Badge>
                  </div>

                  <div className="flex flex-wrap gap-2">
                    {component.tags.map((tag) => (
                      <Badge key={tag} variant="outline" className="text-xs">
                        <TagIcon className="w-3 h-3 mr-1" />
                        {tag}
                      </Badge>
                    ))}
                  </div>
                </div>

                <Button onClick={handleCopyCode} className="shrink-0">
                  {copied ? <CheckIcon className="w-4 h-4 mr-2" /> : <CopyIcon className="w-4 h-4 mr-2" />}
                  {copied ? "Copied!" : "Copy Code"}
                </Button>
              </div>
            </CardHeader>
          </Card>

          <div className="grid lg:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>Preview</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="border rounded-lg p-4 bg-background min-h-[300px]">
                  <ComponentPreview code={component.code} />
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Code</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="max-h-[400px] overflow-auto">
                  <CodeEditor code={component.code} language="typescript" />
                </div>
              </CardContent>
            </Card>
          </div>

          <div className="mt-6 text-center">
            <p className="text-sm text-muted-foreground">
              Generated by{" "}
              <a href="/" className="text-primary hover:underline">
                UI Components Generator
              </a>
            </p>
          </div>
        </div>
      </div>
    </div>
  )
}
